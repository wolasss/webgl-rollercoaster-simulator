/*
ENGINE.path.add(vec3.fromValues(39.72283935546875,29.94676971435547,4.05419921875),vec3.fromValues(0.03698667138814926,-0.9992729425430298,-0.009256485849618912));
ENGINE.path.add(vec3.fromValues(39.721527099609375,29.955177307128906,2.779266119003296),vec3.fromValues(0.037167035043239594,-0.9992998838424683,-0.004267555195838213));
ENGINE.path.add(vec3.fromValues(39.721343994140625,29.957626342773438,1.50689697265625),vec3.fromValues(0.03730996325612068,-0.9993037581443787,0.00018457946134731174));
ENGINE.path.add(vec3.fromValues(39.722320556640625,29.954757690429688,0.23281900584697723),vec3.fromValues(0.03744504600763321,-0.9992901682853699,0.004150149878114462));
ENGINE.path.add(vec3.fromValues(39.724456787109375,29.947189331054688,-1.0401309728622437),vec3.fromValues(0.03755166754126549,-0.9992653131484985,0.007662060670554638));
ENGINE.path.add(vec3.fromValues(39.727813720703125,29.935470581054688,-2.312285900115967),vec3.fromValues(0.03762349113821983,-0.9992340803146362,0.010764732025563717));
ENGINE.path.add(vec3.fromValues(39.73236083984375,29.920082092285156,-3.585571050643921),vec3.fromValues(0.03768526017665863,-0.9991985559463501,0.013495763763785362));
ENGINE.path.add(vec3.fromValues(39.7381591796875,29.90149688720703,-4.858170032501221),vec3.fromValues(0.037711646407842636,-0.9991624355316162,0.01588270254433155));
ENGINE.path.add(vec3.fromValues(39.745147705078125,29.880149841308594,-6.1291351318359375),vec3.fromValues(0.03772556036710739,-0.9991267919540405,0.017954610288143158));
ENGINE.path.add(vec3.fromValues(39.75335693359375,29.85639190673828,-7.4007568359375),vec3.fromValues(0.037730712443590164,-0.9990929365158081,0.01974203810095787));
ENGINE.path.add(vec3.fromValues(39.762786865234375,29.83055877685547,-8.672866821289062),vec3.fromValues(0.037735797464847565,-0.9990612268447876,0.021270547062158585));
ENGINE.path.add(vec3.fromValues(39.78485107421875,29.80335235595703,-9.927108764648438),vec3.fromValues(0.0016688269097357988,-0.9996378421783447,0.02686057984828949));
ENGINE.path.add(vec3.fromValues(39.7645263671875,29.76879119873047,-11.209457397460938),vec3.fromValues(0.0019232737831771374,-0.999269962310791,0.03815411031246185));
ENGINE.path.add(vec3.fromValues(39.7481689453125,29.70537567138672,-12.488540649414062),vec3.fromValues(0.00237355288118124,-0.9981353878974915,0.060992926359176636));
ENGINE.path.add(vec3.fromValues(39.73565673828125,29.61237335205078,-13.766204833984375),vec3.fromValues(0.0026168832555413246,-0.9964349865913391,0.08432372659444809));
ENGINE.path.add(vec3.fromValues(39.72686767578125,29.48919677734375,-15.041305541992188),vec3.fromValues(0.0026600726414471865,-0.9941383600234985,0.1080823689699173));
ENGINE.path.add(vec3.fromValues(39.721649169921875,29.33544158935547,-16.312362670898438),vec3.fromValues(0.0025136410258710384,-0.9912213683128357,0.13218891620635986));
ENGINE.path.add(vec3.fromValues(39.7198486328125,29.15058135986328,-17.579666137695312),vec3.fromValues(0.002200246788561344,-0.9876662492752075,0.1565585434436798));
ENGINE.path.add(vec3.fromValues(39.72113037109375,28.934486389160156,-18.841415405273438),vec3.fromValues(0.0017877487698569894,-0.9834662079811096,0.181083083152771));
ENGINE.path.add(vec3.fromValues(39.725311279296875,28.687034606933594,-20.096923828125),vec3.fromValues(0.0012846642639487982,-0.9786245822906494,0.2056509554386139));
ENGINE.path.add(vec3.fromValues(39.73199462890625,28.408042907714844,-21.346282958984375),vec3.fromValues(0.0007376489811576903,-0.9731561541557312,0.2301449030637741));
ENGINE.path.add(vec3.fromValues(39.740814208984375,28.098106384277344,-22.586952209472656),vec3.fromValues(0.0001728448405629024,-0.967090904712677,0.2544311285018921));
ENGINE.path.add(vec3.fromValues(39.7513427734375,27.75714874267578,-23.819976806640625),vec3.fromValues(-0.00037234759656712413,-0.9604708552360535,0.2783805727958679));
ENGINE.path.add(vec3.fromValues(39.7630615234375,27.38591766357422,-25.043785095214844),vec3.fromValues(-0.0008456475916318595,-0.9533540606498718,0.30185309052467346));
ENGINE.path.add(vec3.fromValues(39.77545166015625,26.985275268554688,-26.25739288330078),vec3.fromValues(-0.0012268258724361658,-0.9458156228065491,0.32470202445983887));
ENGINE.path.add(vec3.fromValues(39.78790283203125,26.555885314941406,-27.46106719970703),vec3.fromValues(-0.0014890545280650258,-0.9379410147666931,0.34679144620895386));
ENGINE.path.add(vec3.fromValues(39.79974365234375,26.098831176757812,-28.654373168945312),vec3.fromValues(-0.001588816405273974,-0.9298294186592102,0.36798739433288574));
ENGINE.path.add(vec3.fromValues(39.810272216796875,25.61548614501953,-29.836746215820312),vec3.fromValues(-0.0014954294310882688,-0.9215945601463318,0.3881511390209198));
ENGINE.path.add(vec3.fromValues(39.818695068359375,25.1072998046875,-31.00806427001953),vec3.fromValues(-0.00119022186845541,-0.9133579730987549,0.40711691975593567));
ENGINE.path.add(vec3.fromValues(39.824188232421875,24.575775146484375,-32.168663024902344),vec3.fromValues(-0.0006714072078466415,-0.905239999294281,0.42484816908836365));
ENGINE.path.add(vec3.fromValues(39.82586669921875,24.022674560546875,-33.31871032714844),vec3.fromValues(0.0,-0.8974272608757019,0.44111454486846924));
ENGINE.path.add(vec3.fromValues(39.82275390625,23.449848175048828,-34.458778381347656),vec3.fromValues(0.0009460737928748131,-0.8900113105773926,0.45588549971580505));
ENGINE.path.add(vec3.fromValues(39.813812255859375,22.859397888183594,-35.58934783935547),vec3.fromValues(0.0021057771518826485,-0.8831751346588135,0.4689779281616211));
ENGINE.path.add(vec3.fromValues(39.596954345703125,22.21607208251953,-36.67990493774414),vec3.fromValues(0.4427625238895416,-0.7895748615264893,0.42481765151023865));
ENGINE.path.add(vec3.fromValues(39.573394775390625,21.59811019897461,-37.791908264160156),vec3.fromValues(0.4443494975566864,-0.7856990098953247,0.430310994386673));
ENGINE.path.add(vec3.fromValues(39.540557861328125,20.969684600830078,-38.897254943847656),vec3.fromValues(0.4459975063800812,-0.7830134034156799,0.43351542949676514));
ENGINE.path.add(vec3.fromValues(39.4970703125,20.333511352539062,-39.997257232666016),vec3.fromValues(0.4476782977581024,-0.7816118597984314,0.43435829877853394));
ENGINE.path.add(vec3.fromValues(39.441558837890625,19.692535400390625,-41.0933723449707),vec3.fromValues(0.44924116134643555,-0.781680166721344,0.43261805176734924));
ENGINE.path.add(vec3.fromValues(39.372467041015625,19.049930572509766,-42.18719482421875),vec3.fromValues(0.4505760073661804,-0.783380389213562,0.4281314015388489));
ENGINE.path.add(vec3.fromValues(39.288177490234375,18.40914535522461,-43.28046417236328),vec3.fromValues(0.4515450894832611,-0.7868189215660095,0.4207409918308258));
ENGINE.path.add(vec3.fromValues(39.186981201171875,17.773761749267578,-44.37500762939453),vec3.fromValues(0.4520714282989502,-0.7916147112846375,0.41106894612312317));
ENGINE.path.add(vec3.fromValues(39.0677490234375,17.145740509033203,-45.471412658691406),vec3.fromValues(0.45221608877182007,-0.7969760298728943,0.40041202306747437));
ENGINE.path.add(vec3.fromValues(38.9298095703125,16.525493621826172,-46.56944274902344),vec3.fromValues(0.45204997062683105,-0.8025157451629639,0.38938331604003906));
ENGINE.path.add(vec3.fromValues(38.77252197265625,15.913326263427734,-47.66896057128906),vec3.fromValues(0.4515354037284851,-0.808229386806488,0.3779960572719574));
ENGINE.path.add(vec3.fromValues(38.595184326171875,15.309722900390625,-48.76951217651367),vec3.fromValues(0.4506493806838989,-0.8141198754310608,0.3662295341491699));
ENGINE.path.add(vec3.fromValues(38.39703369140625,14.71500015258789,-49.8709831237793),vec3.fromValues(0.4493763744831085,-0.8201820254325867,0.35406556725502014));
ENGINE.path.add(vec3.fromValues(38.177337646484375,14.129725456237793,-50.97278594970703),vec3.fromValues(0.4477003216743469,-0.8264058828353882,0.34149324893951416));
ENGINE.path.add(vec3.fromValues(37.935302734375,13.554306030273438,-52.07465362548828),vec3.fromValues(0.44559553265571594,-0.8327881097793579,0.32849445939064026));
ENGINE.path.add(vec3.fromValues(37.67010498046875,12.9892578125,-53.17613220214844),vec3.fromValues(0.4430308938026428,-0.8393244743347168,0.31505247950553894));
ENGINE.path.add(vec3.fromValues(37.38092041015625,12.435173034667969,-54.27662658691406),vec3.fromValues(0.4399735927581787,-0.8460067510604858,0.30115771293640137));
ENGINE.path.add(vec3.fromValues(37.06689453125,11.892621994018555,-55.375587463378906),vec3.fromValues(0.43637579679489136,-0.8528311848640442,0.28680163621902466));
ENGINE.path.add(vec3.fromValues(36.72711181640625,11.362222671508789,-56.472381591796875),vec3.fromValues(0.43221017718315125,-0.8597843647003174,0.271965354681015));
ENGINE.path.add(vec3.fromValues(36.212371826171875,10.749143600463867,-57.46153259277344),vec3.fromValues(0.7545943856239319,-0.654726505279541,0.04382581636309624));
ENGINE.path.add(vec3.fromValues(35.819488525390625,10.246076583862305,-58.549407958984375),vec3.fromValues(0.7473225593566895,-0.6640570759773254,0.023177793249487877));
ENGINE.path.add(vec3.fromValues(35.398193359375,9.757274627685547,-59.63268280029297),vec3.fromValues(0.7391958832740784,-0.6734881401062012,0.0017912695184350014));
ENGINE.path.add(vec3.fromValues(34.947540283203125,9.283490180969238,-60.71044921875),vec3.fromValues(0.7301661372184753,-0.6829667687416077,-0.020345285534858704));
ENGINE.path.add(vec3.fromValues(34.466644287109375,8.825555801391602,-61.78160858154297),vec3.fromValues(0.7201394438743591,-0.6924813389778137,-0.04322931915521622));
ENGINE.path.add(vec3.fromValues(33.954620361328125,8.384361267089844,-62.84489822387695),vec3.fromValues(0.7090298533439636,-0.7020041346549988,-0.06683539599180222));
ENGINE.path.add(vec3.fromValues(33.410614013671875,7.960750102996826,-63.89915466308594),vec3.fromValues(0.6967467665672302,-0.711505651473999,-0.09112483263015747));
ENGINE.path.add(vec3.fromValues(32.833831787109375,7.555690765380859,-64.94285583496094),vec3.fromValues(0.6832027435302734,-0.7209463119506836,-0.11606210470199585));
ENGINE.path.add(vec3.fromValues(32.145965576171875,7.016654014587402,-65.86506652832031),vec3.fromValues(0.8387201428413391,-0.4041145443916321,-0.3650205135345459));
ENGINE.path.add(vec3.fromValues(31.579193115234375,6.804664134979248,-66.99252319335938),vec3.fromValues(0.65226811170578,-0.7393262386322021,-0.1671619564294815));
ENGINE.path.add(vec3.fromValues(30.90045166015625,6.459733009338379,-67.99494171142578),vec3.fromValues(0.6349517703056335,-0.748099684715271,-0.1928291767835617));
ENGINE.path.add(vec3.fromValues(30.18719482421875,6.135537147521973,-68.97990417480469),vec3.fromValues(0.6164354085922241,-0.756521999835968,-0.2183617353439331));
ENGINE.path.add(vec3.fromValues(29.4393310546875,5.832211971282959,-69.94546508789062),vec3.fromValues(0.5967665910720825,-0.7645341157913208,-0.2436334490776062));
ENGINE.path.add(vec3.fromValues(28.657073974609375,5.549796104431152,-70.88967895507812),vec3.fromValues(0.5759894847869873,-0.7721174359321594,-0.26846030354499817));
ENGINE.path.add(vec3.fromValues(27.840789794921875,5.288212776184082,-71.81060791015625),vec3.fromValues(0.5541693568229675,-0.7792402505874634,-0.29271289706230164));
ENGINE.path.add(vec3.fromValues(26.990936279296875,5.047268867492676,-72.70634460449219),vec3.fromValues(0.5314110517501831,-0.7858676910400391,-0.316250205039978));
ENGINE.path.add(vec3.fromValues(26.108245849609375,4.826649188995361,-73.57504272460938),vec3.fromValues(0.5078326463699341,-0.7919853329658508,-0.3389178216457367));
ENGINE.path.add(vec3.fromValues(25.193603515625,4.625914096832275,-74.41497039794922),vec3.fromValues(0.48356950283050537,-0.7975718379020691,-0.3606102168560028));
ENGINE.path.add(vec3.fromValues(24.248077392578125,4.444507122039795,-75.22447204589844),vec3.fromValues(0.4587758481502533,-0.8026134371757507,-0.38123029470443726));
ENGINE.path.add(vec3.fromValues(23.272796630859375,4.281753063201904,-76.0020751953125),vec3.fromValues(0.4336094260215759,-0.8071114420890808,-0.4006918668746948));
ENGINE.path.add(vec3.fromValues(22.2691650390625,4.136868953704834,-76.74642944335938),vec3.fromValues(0.40822699666023254,-0.8110806941986084,-0.41892585158348083));
ENGINE.path.add(vec3.fromValues(21.23858642578125,4.008978843688965,-77.45637512207031),vec3.fromValues(0.3827992081642151,-0.8145256638526917,-0.435904324054718));
ENGINE.path.add(vec3.fromValues(20.182586669921875,3.897118091583252,-78.13093566894531),vec3.fromValues(0.35749509930610657,-0.8174542784690857,-0.4516257047653198));
ENGINE.path.add(vec3.fromValues(19.102783203125,3.800251007080078,-78.76931762695312),vec3.fromValues(0.33245378732681274,-0.8198947906494141,-0.46609771251678467));
ENGINE.path.add(vec3.fromValues(18.000762939453125,3.7172889709472656,-79.37090301513672),vec3.fromValues(0.3077460527420044,-0.821870744228363,-0.479396253824234));
ENGINE.path.add(vec3.fromValues(16.87823486328125,3.647420883178711,-79.93537139892578),vec3.fromValues(0.2831895649433136,-0.8234046697616577,-0.4917401075363159));
ENGINE.path.add(vec3.fromValues(15.736953735351562,3.5908100605010986,-80.46282196044922),vec3.fromValues(0.2585432827472687,-0.8245477080345154,-0.5032657384872437));
ENGINE.path.add(vec3.fromValues(14.578643798828125,3.5477890968322754,-80.95347595214844),vec3.fromValues(0.23377449810504913,-0.8253252506256104,-0.5139919519424438));
ENGINE.path.add(vec3.fromValues(13.404984474182129,3.518666982650757,-81.4075698852539),vec3.fromValues(0.20889656245708466,-0.8257462978363037,-0.5239324569702148));

*/

ENGINE.path.add(vec3.fromValues(39.7213, 29.9576, 1.5069),vec3.fromValues(0.0373, -0.9993, 0.0002));
ENGINE.path.add(vec3.fromValues(39.7223, 29.9548, 0.2328),vec3.fromValues(0.0375, -0.9993, 0.0041));
ENGINE.path.add(vec3.fromValues(39.7245, 29.9472, -1.0401),vec3.fromValues(0.0376, -0.9993, 0.0077));
ENGINE.path.add(vec3.fromValues(39.7278, 29.9355, -2.3123),vec3.fromValues(0.0376, -0.9992, 0.0108));
ENGINE.path.add(vec3.fromValues(39.7324, 29.9201, -3.5856),vec3.fromValues(0.0377, -0.9992, 0.0135));
ENGINE.path.add(vec3.fromValues(39.7382, 29.9015, -4.8582),vec3.fromValues(0.0377, -0.9992, 0.0159));
ENGINE.path.add(vec3.fromValues(39.7451, 29.8801, -6.1291),vec3.fromValues(0.0377, -0.9991, 0.0180));
ENGINE.path.add(vec3.fromValues(39.7534, 29.8564, -7.4008),vec3.fromValues(0.0377, -0.9991, 0.0197));
ENGINE.path.add(vec3.fromValues(39.7628, 29.8306, -8.6729),vec3.fromValues(0.0377, -0.9991, 0.0213));
ENGINE.path.add(vec3.fromValues(39.7849, 29.8034, -9.9271),vec3.fromValues(0.0016, -0.9996, 0.0268));
ENGINE.path.add(vec3.fromValues(39.7645, 29.7688, -11.2095),vec3.fromValues(0.0020, -0.9993, 0.0382));
ENGINE.path.add(vec3.fromValues(39.7482, 29.7054, -12.4885),vec3.fromValues(0.0024, -0.9981, 0.0610));
ENGINE.path.add(vec3.fromValues(39.7357, 29.6124, -13.7662),vec3.fromValues(0.0027, -0.9964, 0.0843));
ENGINE.path.add(vec3.fromValues(39.7269, 29.4892, -15.0413),vec3.fromValues(0.0027, -0.9941, 0.1081));
ENGINE.path.add(vec3.fromValues(39.7216, 29.3354, -16.3124),vec3.fromValues(0.0026, -0.9912, 0.1322));
ENGINE.path.add(vec3.fromValues(39.7198, 29.1506, -17.5797),vec3.fromValues(0.0022, -0.9877, 0.1565));
ENGINE.path.add(vec3.fromValues(39.7211, 28.9345, -18.8414),vec3.fromValues(0.0018, -0.9835, 0.1811));
ENGINE.path.add(vec3.fromValues(39.7253, 28.6870, -20.0969),vec3.fromValues(0.0013, -0.9786, 0.2056));
ENGINE.path.add(vec3.fromValues(39.7320, 28.4080, -21.3463),vec3.fromValues(0.0008, -0.9732, 0.2301));
ENGINE.path.add(vec3.fromValues(39.7408, 28.0981, -22.5870),vec3.fromValues(0.0002, -0.9671, 0.2544));
ENGINE.path.add(vec3.fromValues(39.7513, 27.7571, -23.8200),vec3.fromValues(-0.0004, -0.9605, 0.2784));
ENGINE.path.add(vec3.fromValues(39.7631, 27.3859, -25.0438),vec3.fromValues(-0.0008, -0.9534, 0.3018));
ENGINE.path.add(vec3.fromValues(39.7755, 26.9853, -26.2574),vec3.fromValues(-0.0012, -0.9458, 0.3247));
ENGINE.path.add(vec3.fromValues(39.7879, 26.5559, -27.4611),vec3.fromValues(-0.0015, -0.9379, 0.3468));
ENGINE.path.add(vec3.fromValues(39.7997, 26.0988, -28.6544),vec3.fromValues(-0.0016, -0.9298, 0.3680));
ENGINE.path.add(vec3.fromValues(39.8103, 25.6155, -29.8367),vec3.fromValues(-0.0015, -0.9216, 0.3882));
ENGINE.path.add(vec3.fromValues(39.8187, 25.1073, -31.0081),vec3.fromValues(-0.0012, -0.9134, 0.4071));
ENGINE.path.add(vec3.fromValues(39.8242, 24.5758, -32.1687),vec3.fromValues(-0.0007, -0.9053, 0.4249));
ENGINE.path.add(vec3.fromValues(39.8259, 24.0227, -33.3187),vec3.fromValues(0.0000, -0.8974, 0.4411));
ENGINE.path.add(vec3.fromValues(39.8228, 23.4498, -34.4588),vec3.fromValues(0.0009, -0.8900, 0.4559));
ENGINE.path.add(vec3.fromValues(39.8138, 22.8594, -35.5893),vec3.fromValues(0.0021, -0.8832, 0.4690));
ENGINE.path.add(vec3.fromValues(39.7980, 22.2536, -36.7112),vec3.fromValues(0.0034, -0.8771, 0.4803));
ENGINE.path.add(vec3.fromValues(39.7741, 21.6347, -37.8253),vec3.fromValues(0.0048, -0.8719, 0.4897));
ENGINE.path.add(vec3.fromValues(39.7408, 21.0053, -38.9329),vec3.fromValues(0.0063, -0.8677, 0.4971));
ENGINE.path.add(vec3.fromValues(39.6970, 20.3681, -40.0351),vec3.fromValues(0.0078, -0.8647, 0.5022));
ENGINE.path.add(vec3.fromValues(39.6410, 19.7261, -41.1336),vec3.fromValues(0.0092, -0.8630, 0.5050));
ENGINE.path.add(vec3.fromValues(39.5714, 19.0824, -42.2298),vec3.fromValues(0.0104, -0.8629, 0.5053));
ENGINE.path.add(vec3.fromValues(39.4865, 18.4405, -43.3256),vec3.fromValues(0.0112, -0.8643, 0.5029));
ENGINE.path.add(vec3.fromValues(39.3847, 17.8039, -44.4227),vec3.fromValues(0.0117, -0.8668, 0.4984));
ENGINE.path.add(vec3.fromValues(39.2649, 17.1747, -45.5217),vec3.fromValues(0.0119, -0.8699, 0.4932));
ENGINE.path.add(vec3.fromValues(39.1262, 16.5533, -46.6224),vec3.fromValues(0.0120, -0.8729, 0.4877));
ENGINE.path.add(vec3.fromValues(38.9681, 15.9398, -47.7247),vec3.fromValues(0.0119, -0.8761, 0.4821));
ENGINE.path.add(vec3.fromValues(38.7900, 15.3349, -48.8281),vec3.fromValues(0.0116, -0.8792, 0.4763));
ENGINE.path.add(vec3.fromValues(38.5909, 14.7389, -49.9325),vec3.fromValues(0.0111, -0.8824, 0.4703));
ENGINE.path.add(vec3.fromValues(38.3702, 14.1523, -51.0373),vec3.fromValues(0.0103, -0.8857, 0.4641));
ENGINE.path.add(vec3.fromValues(38.1271, 13.5755, -52.1422),vec3.fromValues(0.0094, -0.8890, 0.4578));
ENGINE.path.add(vec3.fromValues(37.8608, 13.0090, -53.2468),vec3.fromValues(0.0082, -0.8924, 0.4513));
ENGINE.path.add(vec3.fromValues(37.5703, 12.4535, -54.3505),vec3.fromValues(0.0067, -0.8957, 0.4446));
ENGINE.path.add(vec3.fromValues(37.2549, 11.9095, -55.4527),vec3.fromValues(0.0050, -0.8991, 0.4377));
ENGINE.path.add(vec3.fromValues(36.9137, 11.3777, -56.5529),vec3.fromValues(0.0029, -0.9025, 0.4306));
ENGINE.path.add(vec3.fromValues(36.5456, 10.8586, -57.6503),vec3.fromValues(0.0005, -0.9059, 0.4234));
ENGINE.path.add(vec3.fromValues(36.1498, 10.3530, -58.7440),vec3.fromValues(-0.0022, -0.9094, 0.4160));
ENGINE.path.add(vec3.fromValues(35.2714, 9.3854, -60.9171),vec3.fromValues(-0.0087, -0.9161, 0.4008));
ENGINE.path.add(vec3.fromValues(35.7254, 9.8617, -59.8333),vec3.fromValues(-0.0052, -0.9128, 0.4085));
ENGINE.path.add(vec3.fromValues(34.7868, 8.9250, -61.9945),vec3.fromValues(-0.0125, -0.9195, 0.3930));
ENGINE.path.add(vec3.fromValues(34.2709, 8.4813, -63.0641),vec3.fromValues(-0.0168, -0.9227, 0.3851));
ENGINE.path.add(vec3.fromValues(33.7226, 8.0552, -64.1248),vec3.fromValues(-0.0214, -0.9259, 0.3771));
ENGINE.path.add(vec3.fromValues(33.1413, 7.6476, -65.1750),vec3.fromValues(-0.0265, -0.9291, 0.3690));
ENGINE.path.add(vec3.fromValues(32.5261, 7.2596, -66.2134),vec3.fromValues(-0.0320, -0.9320, 0.3610));
ENGINE.path.add(vec3.fromValues(31.8764, 6.8917, -67.2381),vec3.fromValues(-0.0376, -0.9348, 0.3533));
ENGINE.path.add(vec3.fromValues(31.1920, 6.5444, -68.2474),vec3.fromValues(-0.0434, -0.9372, 0.3460));
ENGINE.path.add(vec3.fromValues(30.4727, 6.2179, -69.2393),vec3.fromValues(-0.0492, -0.9394, 0.3391));
ENGINE.path.add(vec3.fromValues(29.7185, 5.9123, -70.2119),vec3.fromValues(-0.0551, -0.9413, 0.3329));
ENGINE.path.add(vec3.fromValues(28.9295, 5.6277, -71.1631),vec3.fromValues(-0.0608, -0.9430, 0.3273));
ENGINE.path.add(vec3.fromValues(28.1061, 5.3639, -72.0911),vec3.fromValues(-0.0664, -0.9443, 0.3222));
ENGINE.path.add(vec3.fromValues(27.2489, 5.1209, -72.9938),vec3.fromValues(-0.0717, -0.9454, 0.3179));
ENGINE.path.add(vec3.fromValues(26.3585, 4.8984, -73.8694),vec3.fromValues(-0.0767, -0.9462, 0.3142));
ENGINE.path.add(vec3.fromValues(25.4359, 4.6958, -74.7161),vec3.fromValues(-0.0812, -0.9469, 0.3112));
ENGINE.path.add(vec3.fromValues(24.4821, 4.5126, -75.5323),vec3.fromValues(-0.0852, -0.9473, 0.3089));
ENGINE.path.add(vec3.fromValues(23.4983, 4.3482, -76.3165),vec3.fromValues(-0.0887, -0.9475, 0.3072));
ENGINE.path.add(vec3.fromValues(22.4859, 4.2019, -77.0672),vec3.fromValues(-0.0915, -0.9476, 0.3060));
ENGINE.path.add(vec3.fromValues(21.4464, 4.0726, -77.7832),vec3.fromValues(-0.0935, -0.9476, 0.3054));
ENGINE.path.add(vec3.fromValues(20.3812, 3.9595, -78.4637),vec3.fromValues(-0.0949, -0.9475, 0.3053));
ENGINE.path.add(vec3.fromValues(19.2921, 3.8616, -79.1077),vec3.fromValues(-0.0954, -0.9474, 0.3055));
ENGINE.path.add(vec3.fromValues(18.1805, 3.7777, -79.7146),vec3.fromValues(-0.0952, -0.9473, 0.3060));
ENGINE.path.add(vec3.fromValues(17.0484, 3.7071, -80.2841),vec3.fromValues(-0.0948, -0.9472, 0.3064));
ENGINE.path.add(vec3.fromValues(15.8974, 3.6499, -80.8163),vec3.fromValues(-0.0946, -0.9471, 0.3066));
ENGINE.path.add(vec3.fromValues(14.7293, 3.6065, -81.3113),vec3.fromValues(-0.0948, -0.9471, 0.3065));
ENGINE.path.add(vec3.fromValues(13.5457, 3.5770, -81.7694),vec3.fromValues(-0.0954, -0.9472, 0.3061));
ENGINE.path.add(vec3.fromValues(12.3483, 3.5620, -82.1910),vec3.fromValues(-0.0963, -0.9473, 0.3056));
ENGINE.path.add(vec3.fromValues(11.1385, 3.5615, -82.5763),vec3.fromValues(-0.0976, -0.9474, 0.3050));
ENGINE.path.add(vec3.fromValues(9.9178, 3.5759, -82.9256),vec3.fromValues(-0.0993, -0.9474, 0.3042));
ENGINE.path.add(vec3.fromValues(8.6877, 3.6054, -83.2393),vec3.fromValues(-0.1013, -0.9475, 0.3034));
ENGINE.path.add(vec3.fromValues(7.4495, 3.6503, -83.5178),vec3.fromValues(-0.1038, -0.9475, 0.3026));
ENGINE.path.add(vec3.fromValues(6.2045, 3.7108, -83.7613),vec3.fromValues(-0.1066, -0.9474, 0.3018));
ENGINE.path.add(vec3.fromValues(4.9540, 3.7871, -83.9702),vec3.fromValues(-0.1098, -0.9473, 0.3010));
ENGINE.path.add(vec3.fromValues(3.6993, 3.8794, -84.1448),vec3.fromValues(-0.1134, -0.9470, 0.3004));
ENGINE.path.add(vec3.fromValues(2.4416, 3.9879, -84.2855),vec3.fromValues(-0.1173, -0.9467, 0.2999));
ENGINE.path.add(vec3.fromValues(1.1819, 4.1129, -84.3927),vec3.fromValues(-0.1216, -0.9463, 0.2996));
ENGINE.path.add(vec3.fromValues(-0.0784, 4.2544, -84.4665),vec3.fromValues(-0.1261, -0.9457, 0.2994));
ENGINE.path.add(vec3.fromValues(-1.3384, 4.4127, -84.5075),vec3.fromValues(-0.1310, -0.9450, 0.2996));
ENGINE.path.add(vec3.fromValues(-2.5968, 4.5880, -84.5158),vec3.fromValues(-0.1359, -0.9442, 0.2999));
ENGINE.path.add(vec3.fromValues(-3.8528, 4.7797, -84.4916),vec3.fromValues(-0.1403, -0.9434, 0.3005));
ENGINE.path.add(vec3.fromValues(-5.1053, 4.9867, -84.4350),vec3.fromValues(-0.1438, -0.9426, 0.3014));
ENGINE.path.add(vec3.fromValues(-6.3537, 5.2078, -84.3457),vec3.fromValues(-0.1465, -0.9419, 0.3023));
ENGINE.path.add(vec3.fromValues(-7.5970, 5.4420, -84.2236),vec3.fromValues(-0.1484, -0.9412, 0.3034));
ENGINE.path.add(vec3.fromValues(-8.8344, 5.6883, -84.0685),vec3.fromValues(-0.1495, -0.9407, 0.3045));
ENGINE.path.add(vec3.fromValues(-10.0650, 5.9455, -83.8801),vec3.fromValues(-0.1499, -0.9403, 0.3056));
ENGINE.path.add(vec3.fromValues(-11.2880, 6.2127, -83.6580),vec3.fromValues(-0.1495, -0.9400, 0.3066));
ENGINE.path.add(vec3.fromValues(-12.5024, 6.4889, -83.4020),vec3.fromValues(-0.1483, -0.9399, 0.3075));
ENGINE.path.add(vec3.fromValues(-13.7074, 6.7732, -83.1116),vec3.fromValues(-0.1464, -0.9400, 0.3082));
ENGINE.path.add(vec3.fromValues(-14.9019, 7.0645, -82.7864),vec3.fromValues(-0.1438, -0.9402, 0.3087));
ENGINE.path.add(vec3.fromValues(-16.0848, 7.3620, -82.4260),vec3.fromValues(-0.1406, -0.9406, 0.3089));
ENGINE.path.add(vec3.fromValues(-17.2552, 7.6647, -82.0297),vec3.fromValues(-0.1366, -0.9413, 0.3088));
ENGINE.path.add(vec3.fromValues(-18.4117, 7.9715, -81.5973),vec3.fromValues(-0.1320, -0.9421, 0.3083));
ENGINE.path.add(vec3.fromValues(-19.5531, 8.2815, -81.1282),vec3.fromValues(-0.1267, -0.9431, 0.3073));
ENGINE.path.add(vec3.fromValues(-20.6782, 8.5938, -80.6219),vec3.fromValues(-0.1208, -0.9444, 0.3058));
ENGINE.path.add(vec3.fromValues(-21.7855, 8.9072, -80.0780),vec3.fromValues(-0.1143, -0.9459, 0.3038));
ENGINE.path.add(vec3.fromValues(-22.8735, 9.2207, -79.4961),vec3.fromValues(-0.1073, -0.9475, 0.3012));
ENGINE.path.add(vec3.fromValues(-23.9408, 9.5332, -78.8761),vec3.fromValues(-0.0999, -0.9493, 0.2980));
ENGINE.path.add(vec3.fromValues(-24.9863, 9.8439, -78.2188),vec3.fromValues(-0.0923, -0.9512, 0.2943));
ENGINE.path.add(vec3.fromValues(-26.0092, 10.1520, -77.5254),vec3.fromValues(-0.0847, -0.9532, 0.2902));
ENGINE.path.add(vec3.fromValues(-27.0092, 10.4567, -76.7972),vec3.fromValues(-0.0771, -0.9552, 0.2857));
ENGINE.path.add(vec3.fromValues(-27.9855, 10.7572, -76.0357),vec3.fromValues(-0.0693, -0.9572, 0.2809));
ENGINE.path.add(vec3.fromValues(-28.9378, 11.0528, -75.2422),vec3.fromValues(-0.0616, -0.9593, 0.2756));
ENGINE.path.add(vec3.fromValues(-29.8659, 11.3428, -74.4181),vec3.fromValues(-0.0539, -0.9613, 0.2700));
ENGINE.path.add(vec3.fromValues(-30.7695, 11.6267, -73.5649),vec3.fromValues(-0.0461, -0.9634, 0.2641));
ENGINE.path.add(vec3.fromValues(-31.6486, 11.9038, -72.6839),vec3.fromValues(-0.0384, -0.9654, 0.2579));
ENGINE.path.add(vec3.fromValues(-32.5032, 12.1735, -71.7765),vec3.fromValues(-0.0307, -0.9674, 0.2514));
ENGINE.path.add(vec3.fromValues(-33.3332, 12.4354, -70.8440),vec3.fromValues(-0.0230, -0.9694, 0.2445));
ENGINE.path.add(vec3.fromValues(-34.1387, 12.6889, -69.8878),vec3.fromValues(-0.0155, -0.9713, 0.2374));
ENGINE.path.add(vec3.fromValues(-34.9200, 12.9336, -68.9091),vec3.fromValues(-0.0078, -0.9731, 0.2301));
ENGINE.path.add(vec3.fromValues(-35.6772, 13.1692, -67.9091),vec3.fromValues(-0.0003, -0.9749, 0.2224));
ENGINE.path.add(vec3.fromValues(-36.4106, 13.3951, -66.8890),vec3.fromValues(0.0072, -0.9767, 0.2146));
ENGINE.path.add(vec3.fromValues(-37.1204, 13.6110, -65.8499),vec3.fromValues(0.0146, -0.9783, 0.2065));
ENGINE.path.add(vec3.fromValues(-37.8069, 13.8166, -64.7929),vec3.fromValues(0.0220, -0.9799, 0.1982));
ENGINE.path.add(vec3.fromValues(-38.4704, 14.0117, -63.7190),vec3.fromValues(0.0293, -0.9814, 0.1896));
ENGINE.path.add(vec3.fromValues(-39.1113, 14.1958, -62.6292),vec3.fromValues(0.0366, -0.9828, 0.1808));
ENGINE.path.add(vec3.fromValues(-39.7297, 14.3686, -61.5242),vec3.fromValues(0.0439, -0.9842, 0.1716));
ENGINE.path.add(vec3.fromValues(-40.3253, 14.5295, -60.4047),vec3.fromValues(0.0514, -0.9855, 0.1618));
ENGINE.path.add(vec3.fromValues(-40.8977, 14.6777, -59.2712),vec3.fromValues(0.0589, -0.9867, 0.1514));
ENGINE.path.add(vec3.fromValues(-41.4464, 14.8125, -58.1241),vec3.fromValues(0.0666, -0.9879, 0.1403));
ENGINE.path.add(vec3.fromValues(-41.9706, 14.9329, -56.9637),vec3.fromValues(0.0744, -0.9890, 0.1281));
ENGINE.path.add(vec3.fromValues(-42.4694, 15.0381, -55.7906),vec3.fromValues(0.0822, -0.9899, 0.1153));
ENGINE.path.add(vec3.fromValues(-42.9416, 15.1269, -54.6049),vec3.fromValues(0.0903, -0.9908, 0.1011));
ENGINE.path.add(vec3.fromValues(-43.3857, 15.1980, -53.4069),vec3.fromValues(0.0983, -0.9915, 0.0857));
ENGINE.path.add(vec3.fromValues(-43.8001, 15.2499, -52.1973),vec3.fromValues(0.1064, -0.9919, 0.0688));
ENGINE.path.add(vec3.fromValues(-44.1828, 15.2811, -50.9762),vec3.fromValues(0.1144, -0.9922, 0.0502));
ENGINE.path.add(vec3.fromValues(-44.5314, 15.2896, -49.7445),vec3.fromValues(0.1223, -0.9921, 0.0295));
ENGINE.path.add(vec3.fromValues(-44.8431, 15.2734, -48.5030),vec3.fromValues(0.1299, -0.9915, 0.0067));
ENGINE.path.add(vec3.fromValues(-45.1147, 15.2299, -47.2525),vec3.fromValues(0.1371, -0.9904, -0.0188));
ENGINE.path.add(vec3.fromValues(-45.3424, 15.1566, -45.9944),vec3.fromValues(0.1437, -0.9885, -0.0473));
ENGINE.path.add(vec3.fromValues(-45.5219, 15.0502, -44.7307),vec3.fromValues(0.1493, -0.9856, -0.0791));
ENGINE.path.add(vec3.fromValues(-45.6481, 14.9074, -43.4642),vec3.fromValues(0.1534, -0.9815, -0.1146));
ENGINE.path.add(vec3.fromValues(-45.7154, 14.7243, -42.1984),vec3.fromValues(0.1556, -0.9757, -0.1542));
ENGINE.path.add(vec3.fromValues(-45.7176, 14.4969, -40.9380),vec3.fromValues(0.1551, -0.9680, -0.1974));
ENGINE.path.add(vec3.fromValues(-45.4644, 14.2122, -39.7216),vec3.fromValues(-0.3348, -0.9224, -0.1924));
ENGINE.path.add(vec3.fromValues(-45.3271, 13.8956, -38.4979),vec3.fromValues(-0.3396, -0.9176, -0.2065));
ENGINE.path.add(vec3.fromValues(-45.1189, 13.5379, -37.2962),vec3.fromValues(-0.3454, -0.9128, -0.2181));
ENGINE.path.add(vec3.fromValues(-44.8405, 13.1430, -36.1211),vec3.fromValues(-0.3519, -0.9081, -0.2269));
ENGINE.path.add(vec3.fromValues(-44.4933, 12.7153, -34.9766),vec3.fromValues(-0.3587, -0.9039, -0.2329));
ENGINE.path.add(vec3.fromValues(-43.9422, 12.1757, -33.9589),vec3.fromValues(-0.7306, -0.6828, 0.0060));
ENGINE.path.add(vec3.fromValues(-43.4663, 11.6993, -32.8948),vec3.fromValues(-0.7232, -0.6900, 0.0305));
ENGINE.path.add(vec3.fromValues(-42.9272, 11.2047, -31.8704),vec3.fromValues(-0.7133, -0.6986, 0.0559));
ENGINE.path.add(vec3.fromValues(-42.3266, 10.6969, -30.8883),vec3.fromValues(-0.7006, -0.7088, 0.0820));
ENGINE.path.add(vec3.fromValues(-41.6660, 10.1810, -29.9504),vec3.fromValues(-0.6847, -0.7207, 0.1087));
ENGINE.path.add(vec3.fromValues(-40.9468, 9.6625, -29.0590),vec3.fromValues(-0.6653, -0.7341, 0.1356));
ENGINE.path.add(vec3.fromValues(-40.1700, 9.1469, -28.2162),vec3.fromValues(-0.6416, -0.7494, 0.1635));
ENGINE.path.add(vec3.fromValues(-39.3365, 8.6406, -27.4247),vec3.fromValues(-0.6134, -0.7662, 0.1915));
ENGINE.path.add(vec3.fromValues(-38.4467, 8.1500, -26.6875),vec3.fromValues(-0.5796, -0.7846, 0.2202));
ENGINE.path.add(vec3.fromValues(-37.5013, 7.6829, -26.0082),vec3.fromValues(-0.5399, -0.8041, 0.2489));
ENGINE.path.add(vec3.fromValues(-36.5026, 7.2460, -25.3900),vec3.fromValues(-0.4969, -0.8228, 0.2759));
ENGINE.path.add(vec3.fromValues(-35.4557, 6.8430, -24.8330),vec3.fromValues(-0.4510, -0.8403, 0.3009));
ENGINE.path.add(vec3.fromValues(-34.3663, 6.4771, -24.3361),vec3.fromValues(-0.4037, -0.8560, 0.3229));
ENGINE.path.add(vec3.fromValues(-33.2405, 6.1512, -23.8967),vec3.fromValues(-0.3562, -0.8696, 0.3419));
ENGINE.path.add(vec3.fromValues(-32.0841, 5.8676, -23.5112),vec3.fromValues(-0.3080, -0.8811, 0.3588));
ENGINE.path.add(vec3.fromValues(-30.9025, 5.6281, -23.1753),vec3.fromValues(-0.2600, -0.8906, 0.3731));
ENGINE.path.add(vec3.fromValues(-29.7008, 5.4345, -22.8835),vec3.fromValues(-0.2131, -0.8978, 0.3853));
ENGINE.path.add(vec3.fromValues(-28.4834, 5.2885, -22.6303),vec3.fromValues(-0.1662, -0.9030, 0.3962));
ENGINE.path.add(vec3.fromValues(-27.2543, 5.1918, -22.4094),vec3.fromValues(-0.1208, -0.9062, 0.4053));
ENGINE.path.add(vec3.fromValues(-26.0174, 5.1465, -22.2143),vec3.fromValues(-0.0754, -0.9075, 0.4133));
ENGINE.path.add(vec3.fromValues(-24.7761, 5.1550, -22.0381),vec3.fromValues(-0.0307, -0.9067, 0.4206));
ENGINE.path.add(vec3.fromValues(-23.5341, 5.2204, -21.8733),vec3.fromValues(0.0134, -0.9039, 0.4275));
ENGINE.path.add(vec3.fromValues(-22.2957, 5.3454, -21.7125),vec3.fromValues(0.0557, -0.8993, 0.4338));
ENGINE.path.add(vec3.fromValues(-21.0637, 5.5294, -21.5496),vec3.fromValues(0.0949, -0.8929, 0.4401));
ENGINE.path.add(vec3.fromValues(-19.8416, 5.7706, -21.3783),vec3.fromValues(0.1301, -0.8852, 0.4466));
ENGINE.path.add(vec3.fromValues(-18.6324, 6.0669, -21.1919),vec3.fromValues(0.1609, -0.8766, 0.4536));
ENGINE.path.add(vec3.fromValues(-17.4396, 6.4153, -20.9827),vec3.fromValues(0.1862, -0.8677, 0.4610));
ENGINE.path.add(vec3.fromValues(-16.2665, 6.8126, -20.7427),vec3.fromValues(0.2056, -0.8591, 0.4687));
ENGINE.path.add(vec3.fromValues(-15.1168, 7.2546, -20.4631),vec3.fromValues(0.2193, -0.8514, 0.4764));
ENGINE.path.add(vec3.fromValues(-13.9945, 7.7365, -20.1352),vec3.fromValues(0.2258, -0.8460, 0.4831));
ENGINE.path.add(vec3.fromValues(-12.9042, 8.2526, -19.7498),vec3.fromValues(0.2263, -0.8429, 0.4882));
ENGINE.path.add(vec3.fromValues(-11.8511, 8.7961, -19.2984),vec3.fromValues(0.2203, -0.8431, 0.4907));
ENGINE.path.add(vec3.fromValues(-10.8405, 9.3594, -18.7738),vec3.fromValues(0.2097, -0.8461, 0.4901));
ENGINE.path.add(vec3.fromValues(-9.8757, 9.9356, -18.1769),vec3.fromValues(0.1976, -0.8507, 0.4871));
ENGINE.path.add(vec3.fromValues(-8.9574, 10.5191, -17.5133),vec3.fromValues(0.1846, -0.8563, 0.4824));
ENGINE.path.add(vec3.fromValues(-8.0857, 11.1045, -16.7882),vec3.fromValues(0.1712, -0.8628, 0.4757));
ENGINE.path.add(vec3.fromValues(-7.3970, 11.6851, -15.8635),vec3.fromValues(0.4861, -0.8632, 0.1361));
ENGINE.path.add(vec3.fromValues(-6.6242, 12.2557, -15.0357),vec3.fromValues(0.4873, -0.8616, 0.1416));
ENGINE.path.add(vec3.fromValues(-5.8965, 12.8142, -14.1585),vec3.fromValues(0.4864, -0.8616, 0.1452));
ENGINE.path.add(vec3.fromValues(-5.2132, 13.3558, -13.2347),vec3.fromValues(0.4834, -0.8630, 0.1464));
ENGINE.path.add(vec3.fromValues(-4.5743, 13.8758, -12.2665),vec3.fromValues(0.4788, -0.8659, 0.1448));
ENGINE.path.add(vec3.fromValues(-3.9798, 14.3688, -11.2554),vec3.fromValues(0.4726, -0.8701, 0.1400));
ENGINE.path.add(vec3.fromValues(-3.4305, 14.8290, -10.2028),vec3.fromValues(0.4657, -0.8750, 0.1323));
ENGINE.path.add(vec3.fromValues(-2.9287, 15.2525, -9.1108),vec3.fromValues(0.4589, -0.8799, 0.1229));
ENGINE.path.add(vec3.fromValues(-2.4768, 15.6361, -7.9817),vec3.fromValues(0.4523, -0.8849, 0.1113));
ENGINE.path.add(vec3.fromValues(-1.7323, 16.2694, -5.6247),vec3.fromValues(0.4404, -0.8939, 0.0830));
ENGINE.path.add(vec3.fromValues(-1.4447, 16.5118, -4.4040),vec3.fromValues(0.4352, -0.8979, 0.0658));
ENGINE.path.add(vec3.fromValues(-1.2167, 16.6997, -3.1608),vec3.fromValues(0.4308, -0.9012, 0.0465));
ENGINE.path.add(vec3.fromValues(-1.0505, 16.8294, -1.9001),vec3.fromValues(0.4274, -0.9037, 0.0251));
ENGINE.path.add(vec3.fromValues(-0.9483, 16.8968, -0.6277),vec3.fromValues(0.4252, -0.9051, 0.0016));
ENGINE.path.add(vec3.fromValues(-0.9138, 16.8981, 0.6502),vec3.fromValues(0.4243, -0.9052, -0.0226));
ENGINE.path.add(vec3.fromValues(-0.9547, 16.8298, 1.9259),vec3.fromValues(0.4252, -0.9039, -0.0464));
ENGINE.path.add(vec3.fromValues(-1.0777, 16.6903, 3.1902),vec3.fromValues(0.4281, -0.9011, -0.0690));
ENGINE.path.add(vec3.fromValues(-1.2862, 16.4804, 4.4327),vec3.fromValues(0.4326, -0.8971, -0.0893));
ENGINE.path.add(vec3.fromValues(-1.7251, 16.0868, 5.5797),vec3.fromValues(0.7867, -0.6141, 0.0629));
ENGINE.path.add(vec3.fromValues(-2.0983, 15.7518, 6.7374),vec3.fromValues(0.7810, -0.6185, 0.0856));
ENGINE.path.add(vec3.fromValues(-2.5481, 15.3630, 7.8497),vec3.fromValues(0.7739, -0.6240, 0.1081));
ENGINE.path.add(vec3.fromValues(-3.0669, 14.9280, 8.9130),vec3.fromValues(0.7658, -0.6298, 0.1294));
ENGINE.path.add(vec3.fromValues(-3.6470, 14.4543, 9.9268),vec3.fromValues(0.7570, -0.6361, 0.1493));
ENGINE.path.add(vec3.fromValues(-4.2794, 13.9505, 10.8933),vec3.fromValues(0.7475, -0.6427, 0.1678));
ENGINE.path.add(vec3.fromValues(-4.9576, 13.4237, 11.8151),vec3.fromValues(0.7371, -0.6499, 0.1852));
ENGINE.path.add(vec3.fromValues(-5.6770, 12.8792, 12.6940),vec3.fromValues(0.7256, -0.6578, 0.2019));
ENGINE.path.add(vec3.fromValues(-6.4347, 12.3212, 13.5308),vec3.fromValues(0.7128, -0.6666, 0.2180));
ENGINE.path.add(vec3.fromValues(-7.2292, 11.7531, 14.3251),vec3.fromValues(0.6984, -0.6764, 0.2339));
ENGINE.path.add(vec3.fromValues(-8.0596, 11.1780, 15.0759),vec3.fromValues(0.6819, -0.6875, 0.2495));
ENGINE.path.add(vec3.fromValues(-8.9261, 10.5987, 15.7809),vec3.fromValues(0.6629, -0.7001, 0.2652));
ENGINE.path.add(vec3.fromValues(-9.8291, 10.0181, 16.4365),vec3.fromValues(0.6407, -0.7145, 0.2810));
ENGINE.path.add(vec3.fromValues(-10.7698, 9.4397, 17.0379),vec3.fromValues(0.6146, -0.7308, 0.2970));
ENGINE.path.add(vec3.fromValues(-11.7497, 8.8672, 17.5781),vec3.fromValues(0.5836, -0.7491, 0.3133));
ENGINE.path.add(vec3.fromValues(-12.7689, 8.3060, 18.0501),vec3.fromValues(0.5484, -0.7685, 0.3295));
ENGINE.path.add(vec3.fromValues(-13.8251, 7.7621, 18.4546),vec3.fromValues(0.5106, -0.7878, 0.3442));
ENGINE.path.add(vec3.fromValues(-17.1761, 6.2899, 19.3174),vec3.fromValues(0.3923, -0.8394, 0.3761));
ENGINE.path.add(vec3.fromValues(-21.9302, 4.8234, 19.9788),vec3.fromValues(0.2561, -0.8824, 0.3946));
ENGINE.path.add(vec3.fromValues(-26.7989, 4.0218, 20.8084),vec3.fromValues(0.0956, -0.9946, -0.0396));
ENGINE.path.add(vec3.fromValues(-30.4702, 3.8694, 21.6045),vec3.fromValues(-0.0300, -0.9995, -0.0121));
ENGINE.path.add(vec3.fromValues(-35.0653, 4.4919, 23.4807),vec3.fromValues(-0.2177, -0.9733, 0.0721));
ENGINE.path.add(vec3.fromValues(-38.8315, 6.0797, 26.3951),vec3.fromValues(-0.3533, -0.9160, 0.1903));
ENGINE.path.add(vec3.fromValues(-41.0114, 7.6504, 29.0673),vec3.fromValues(-0.3825, -0.8885, 0.2532));
ENGINE.path.add(vec3.fromValues(-42.5886, 9.2351, 32.1236),vec3.fromValues(-0.7218, -0.6917, 0.0238));
ENGINE.path.add(vec3.fromValues(-43.8577, 10.8505, 35.2903),vec3.fromValues(-0.7308, -0.6770, 0.0873));
ENGINE.path.add(vec3.fromValues(-44.6823, 12.3133, 38.6749),vec3.fromValues(-0.7280, -0.6718, 0.1365));
ENGINE.path.add(vec3.fromValues(-45.0086, 13.4924, 42.2533),vec3.fromValues(-0.7203, -0.6721, 0.1713));
ENGINE.path.add(vec3.fromValues(-44.8001, 14.2906, 45.9501),vec3.fromValues(-0.7130, -0.6724, 0.1987));
ENGINE.path.add(vec3.fromValues(-44.3890, 14.6189, 48.4247),vec3.fromValues(-0.7083, -0.6724, 0.2151));
ENGINE.path.add(vec3.fromValues(-43.3317, 14.6755, 52.0783),vec3.fromValues(-0.9165, -0.2671, 0.2977));
ENGINE.path.add(vec3.fromValues(-42.4931, 14.6720, 54.4548),vec3.fromValues(-0.9010, -0.2676, 0.3413));
ENGINE.path.add(vec3.fromValues(-40.4320, 14.3721, 59.0446),vec3.fromValues(-0.8677, -0.2746, 0.4144));
ENGINE.path.add(vec3.fromValues(-37.9553, 13.7696, 63.3954),vec3.fromValues(-0.8320, -0.2857, 0.4755));
ENGINE.path.add(vec3.fromValues(-35.1069, 12.9340, 67.4714),vec3.fromValues(-0.7876, -0.3003, 0.5380));
ENGINE.path.add(vec3.fromValues(-32.7274, 12.1828, 70.3131),vec3.fromValues(-0.7471, -0.3135, 0.5861));
ENGINE.path.add(vec3.fromValues(-31.0263, 11.6335, 72.0907),vec3.fromValues(-0.7163, -0.3235, 0.6182));
ENGINE.path.add(vec3.fromValues(-27.3720, 10.2510, 75.2811),vec3.fromValues(-0.6038, 0.0605, 0.7948));
ENGINE.path.add(vec3.fromValues(-24.3814, 9.4978, 77.4570),vec3.fromValues(-0.5844, -0.3645, 0.7250));
ENGINE.path.add(vec3.fromValues(-21.2322, 8.5285, 79.2994),vec3.fromValues(-0.5168, -0.3838, 0.7652));
ENGINE.path.add(vec3.fromValues(-16.7909, 7.2603, 81.2897),vec3.fromValues(-0.4148, -0.4108, 0.8119));
ENGINE.path.add(vec3.fromValues(-13.3004, 6.3729, 82.4086),vec3.fromValues(-0.3276, -0.4312, 0.8407));
ENGINE.path.add(vec3.fromValues(-9.6964, 5.5797, 83.1816),vec3.fromValues(-0.2303, -0.4511, 0.8622));
ENGINE.path.add(vec3.fromValues(-4.7652, 4.7306, 83.6322),vec3.fromValues(-0.0854, -0.4749, 0.8759));
ENGINE.path.add(vec3.fromValues(0.2231, 4.1924, 83.3803),vec3.fromValues(0.0681, -0.4918, 0.8680));
ENGINE.path.add(vec3.fromValues(6.3773, 3.9756, 82.1507),vec3.fromValues(0.2313, -0.4999, 0.8346));
ENGINE.path.add(vec3.fromValues(13.4595, 4.2834, 79.5914),vec3.fromValues(0.3896, -0.4959, 0.7760));
ENGINE.path.add(vec3.fromValues(19.0019, 4.9523, 76.7065),vec3.fromValues(0.5044, -0.4838, 0.7151));
ENGINE.path.add(vec3.fromValues(24.1163, 5.9773, 73.2040),vec3.fromValues(0.6159, -0.4623, 0.6379));
ENGINE.path.add(vec3.fromValues(27.7958, 7.0869, 69.9641),vec3.fromValues(0.7094, -0.4332, 0.5560));
ENGINE.path.add(vec3.fromValues(30.9970, 8.5028, 66.3557),vec3.fromValues(0.7990, -0.3910, 0.4568));
ENGINE.path.add(vec3.fromValues(33.0308, 9.7784, 63.4440),vec3.fromValues(0.8575, -0.3522, 0.3749));
ENGINE.path.add(vec3.fromValues(34.7928, 11.3912, 60.5082),vec3.fromValues(0.7637, -0.6431, 0.0560));
ENGINE.path.add(vec3.fromValues(36.1495, 13.0133, 57.3687),vec3.fromValues(0.7967, -0.6039, -0.0245));
ENGINE.path.add(vec3.fromValues(36.8721, 14.1762, 55.2450),vec3.fromValues(0.8113, -0.5799, -0.0739));
ENGINE.path.add(vec3.fromValues(37.7209, 15.9990, 52.0281),vec3.fromValues(0.8225, -0.5534, -0.1314));
ENGINE.path.add(vec3.fromValues(38.4876, 17.9662, 48.8619),vec3.fromValues(0.5025, -0.7848, -0.3628));
ENGINE.path.add(vec3.fromValues(38.8022, 19.1976, 46.6632),vec3.fromValues(0.4987, -0.7837, -0.3703));
ENGINE.path.add(vec3.fromValues(39.3452, 21.0378, 43.3752),vec3.fromValues(0.0540, -0.8867, -0.4592));
ENGINE.path.add(vec3.fromValues(39.5783, 22.7540, 39.9677),vec3.fromValues(0.0461, -0.9009, -0.4316));
ENGINE.path.add(vec3.fromValues(39.7769, 25.3113, 34.1334),vec3.fromValues(0.0361, -0.9312, -0.3626));
ENGINE.path.add(vec3.fromValues(39.8199, 26.5984, 30.5298),vec3.fromValues(0.0325, -0.9513, -0.3064));
ENGINE.path.add(vec3.fromValues(39.8309, 27.6502, 26.8488),vec3.fromValues(0.0307, -0.9697, -0.2423));
ENGINE.path.add(vec3.fromValues(39.8160, 28.6805, 21.8484),vec3.fromValues(0.0312, -0.9860, -0.1635));
ENGINE.path.add(vec3.fromValues(39.7844, 29.3441, 16.7868),vec3.fromValues(0.0331, -0.9944, -0.0999));
ENGINE.path.add(vec3.fromValues(39.7448, 29.7880, 10.4240),vec3.fromValues(0.0355, -0.9984, -0.0440));
ENGINE.path.add(vec3.fromValues(39.7253, 29.9317, 5.3275),vec3.fromValues(0.0367, -0.9992, -0.0148));


